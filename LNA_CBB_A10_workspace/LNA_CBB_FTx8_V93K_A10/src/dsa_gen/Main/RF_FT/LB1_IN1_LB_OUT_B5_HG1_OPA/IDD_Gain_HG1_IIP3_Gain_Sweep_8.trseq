/* ---------------------------------------------------------------------------*
 * 
 * This file was automatically generated by the SmarTest Device Setup API.
 * 
 * The contents of this file are generated by a combination of the 
 * test method code as well as the testflow file being used. In the 
 * SmarTest Work Center, you can navigate to the generating source 
 * by holding down the CTRL+ALT+R keys when your cursor is positioned 
 * over either of these two file paths listed below:
 * 
 *   1. The test method location which resulted in the creation of this file:
 *      src/rf2rf_tml/RF2RFBurst_TEST.java:193
 * 
 *   2. The testflow file which contains the used test suite and parameter
 *      settings:
 *      LNA/testflows/RF_FT.flow
 * 
 *      The name of the test suite is: Main.RF_FT.LB1_IN1_LB_OUT_B5_HG1_OPA
 * 
 * This file is not intended to be modified. Do not make changes
 * to this file as your changes may be overwritten when the
 * generating code is executed again!
 *
 * ---------------------------------------------------------------------------*/
import setups.mipi.mipi;

transactSeqDefinitions IDD_Gain_HG1_IIP3_Gain_Sweep_8
{
    transactSeqDef TS_ReSet_Gain_Sweep5()
    {
        write(<0xC>, <0x48>, <0x0F>);
        write(<0xC>, <0x49>, <0x08>);
        write(<0xC>, <0x4A>, <0x03>);
        write(<0xC>, <0x4B>, <0x09>);
        write(<0xC>, <0x4C>, <0x05>);
        write(<0xC>, <0x4D>, <0x04>);
        write(<0xC>, <0x4E>, <0x06>);
        write(<0xC>, <0x4F>, <0x07>);
        write(<0xC>, <0x70>, <0x00>);
        write(<0xC>, <0x71>, <0x00>);
        write(<0xC>, <0x72>, <0x00>);
        write(<0xC>, <0x73>, <0x0E>);
        write(<0xC>, <0x74>, <0x68>);
        write(<0xC>, <0x75>, <0x20>);
        write(<0xC>, <0x76>, <0x08>);
        write(<0xC>, <0x77>, <0x85>);
        write(<0xC>, <0x78>, <0x30>);
        write(<0xC>, <0x79>, <0x09>);
        write(<0xC>, <0x7A>, <0x76>);
        write(<0xC>, <0x7B>, <0x45>);
        write(<0xC>, <0x7C>, <0x00>);
        write(<0xC>, <0x7D>, <0x00>);
        write(<0xC>, <0x7E>, <0x00>);
        write(<0xC>, <0x80>, <0x00>);
        write(<0xC>, <0x81>, <0x00>);
        write(<0xC>, <0x82>, <0x00>);
        write(<0xC>, <0x83>, <0x0F>);
        write(<0xC>, <0x84>, <0xDC>);
        write(<0xC>, <0x85>, <0x83>);
        write(<0xC>, <0x86>, <0x0C>);
        write(<0xC>, <0x87>, <0x97>);
        write(<0xC>, <0x88>, <0x41>);
        write(<0xC>, <0x89>, <0x04>);
        write(<0xC>, <0x8A>, <0x44>);
        write(<0xC>, <0x8B>, <0x12>);
        write(<0xC>, <0x90>, <0x11>);
        write(<0xC>, <0x91>, <0x11>);
        write(<0xC>, <0x92>, <0x10>);
        write(<0xC>, <0x93>, <0xE7>);
        write(<0xC>, <0x94>, <0x65>);
        write(<0xC>, <0x95>, <0x30>);
        write(<0xC>, <0x96>, <0x84>);
        write(<0xC>, <0x97>, <0x32>);
        write(<0xC>, <0x98>, <0x00>);
        write(<0xC>, <0x99>, <0x55>);
        write(<0xC>, <0x9A>, <0x55>);
        write(<0xC>, <0x9B>, <0x30>);
        write(<0xC>, <0xA0>, <0x00>);
        write(<0xC>, <0xA1>, <0x00>);
        write(<0xC>, <0xA2>, <0x0A>);
        write(<0xC>, <0xA3>, <0x60>);
        write(<0xC>, <0xA4>, <0x05>);
        write(<0xC>, <0xA5>, <0x40>);
        write(<0xC>, <0xA6>, <0x08>);
        write(<0xC>, <0xA7>, <0x20>);
        write(<0xC>, <0xB0>, <0x00>);
        write(<0xC>, <0xB1>, <0x00>);
        write(<0xC>, <0xB2>, <0x0A>);
        write(<0xC>, <0xB3>, <0x60>);
        write(<0xC>, <0xB4>, <0x05>);
        write(<0xC>, <0xB5>, <0x80>);
        write(<0xC>, <0xB6>, <0x08>);
        write(<0xC>, <0xB7>, <0x20>);
    }
}
